#ifndef CAN_H
#define CAN_H

#include "main.h"
#include "stm32f1xx_hal.h"
#include <stdint.h>

// Константы для CAN ID и фильтров
#define LEFT_WHEEL_ID 3
#define NEW_WHEEL_ID 2
#define RAW_CAN_BOOTLOADER_HEARTBEAT_ARBITRATION_CODE 0x700
#define RAW_CAN_RESPONSE_ARBITRATION_CODE 0x580

// Определение состояний активации колеса
typedef enum {
    STATE_INIT,                       // Инициализация состояния
    STATE_WAIT_BOOTLOADER_HEARTBEAT,  // Ожидание heartbeat от загрузчика
    STATE_GET_BOOTLOADER_VERSION,     // Получение версии загрузчика
    STATE_SEND_ACTIVATION,            // Отправка команды активации
    STATE_CONFIRM_CANOPEN_MODE,       // Подтверждение режима CANopen
    STATE_CHANGE_NODE_ID,             // Смена Node-ID
    STATE_ACTIVATION_SUCCESS,         // Успешная активация
    STATE_ACTIVATION_FAILED           // Ошибка активации
} ActivationState;

// Инициализация CAN интерфейса и активация
void CAN_Init(void);                      // Инициализация CAN
void StartActivationProcess(void);         // Запуск процесса активации
void CAN_ProcessStateMachine(void);        // Обработка машины состояний активации
void process_CAN_message(uint16_t received_ID, uint8_t *data, uint8_t DLC); // Обработка CAN сообщений
void send_move_command(void);              // Отправка команды движения (если требуется)

// Логирование сообщений в UART
void LogMessage(const char *message);      // Логирование информационного сообщения
void LogError(const char *message);        // Логирование ошибки

#endif // CAN_H
