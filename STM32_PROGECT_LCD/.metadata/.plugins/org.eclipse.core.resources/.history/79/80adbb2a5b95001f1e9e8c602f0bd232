#ifndef CAN_H
#define CAN_H

#include "main.h"
#include "stm32f1xx_hal.h"
#include <stdint.h>

// Инициализация CAN
void CAN_Init(void);
void StartActivationProcess(void);
void CAN_ProcessStateMachine(void);
void process_CAN_message(uint16_t received_ID, uint8_t *data, uint8_t DLC);
void change_node_id_and_save(uint8_t new_id);
void send_move_command(void); // Если в будущем будет отправляться команда движения

// Определение состояний
typedef enum {
    STATE_INIT,
    STATE_WAIT_BOOTLOADER_HEARTBEAT,
    STATE_GET_BOOTLOADER_VERSION,
    STATE_SEND_ACTIVATION,
    STATE_CONFIRM_CANOPEN_MODE,
    STATE_READY_FOR_NODE_ID_CHANGE,
    STATE_CHANGE_NODE_ID,
    STATE_IDLE,                  // Добавлено состояние ожидания
    STATE_SOFT_RESET,
    STATE_ACTIVATION_SUCCESS,
    STATE_ACTIVATION_FAILED
} ActivationState;



// Функции логирования
void LogMessage(const char *message);
void LogError(const char *message);

#endif // CAN_H
